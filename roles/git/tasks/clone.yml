---
- name: Ensure destination dirs exist
  tags: git
  become: true
  become_user: "{{ user }}"
  ansible.builtin.file:
    dest: "/home/{{ user }}/git/{{ item.dir }}"
    state: directory
    mode: "0755"
  loop: "{{ git_repos }}"

- name: Ensure local clone exists
  tags: git
  become: true
  become_user: "{{ user }}"
  environment:
    GIT_SSH_COMMAND: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
  ansible.builtin.command:
    cmd: "git clone --quiet {{ item.clone_options | default('') }} {{ item.url }} /home/{{ user }}/git/{{ item.dir }}"
    creates: "/home/{{ user }}/git/{{ item.dir }}/.git"
  loop: "{{ git_repos }}"

- name: Configure email
  tags: git
  become: true
  become_user: "{{ user }}"
  ansible.builtin.command: "git -C /home/{{ user }}/git/{{ item.dir }}/ config user.email {{ email }}"
  when: email is defined
  changed_when: false
  loop: "{{ git_repos }}"

- name: Execute additional commands
  tags: git
  ansible.builtin.command:
    cmd: "{{ command }}"
    chdir: "{{ dir }}"
  vars:
    dir: "/home/{{ user }}/git/{{ item[0].dir }}/"
    command: "{{ item[1] }}"
  changed_when: false
  loop: "{{ git_repos | product(additional_commands) | list }}"
  when: additional_commands is defined

- name: Pull and fast-forward
  tags: git
  become: true
  become_user: "{{ user }}"
  ansible.builtin.command: "git -C /home/{{ user }}/git/{{ item.dir }}/ pull {{ item.pull_options | default('') }} --rebase --ff-only --all --no-autostash --quiet"
  ignore_errors: true  # noqa: ignore-errors
  changed_when: false
  failed_when: false
  async: 45
  poll: 0
  loop: "{{ git_repos }}"
