---
- name: Ensure some cg.dev utils are installed
  ansible.builtin.command:
    cmd: go install github.com/chainguard-dev/{{ item }}@latest
    creates: /home/{{ user }}/.go/bin/{{ item }}
  loop:
    - melange
    - apko
    - yam

- name: Install some go utils
  ansible.builtin.command:
    cmd: go install
    chdir: /home/{{ user }}/git/cg/{{ item.chdir }}
    creates: /home/{{ user }}/.go/bin/{{ item.creates }}
  loop_control:
    label: "{{ item.creates }}"
  loop:
    - chdir: wolfi-dev/wolfictl
      creates: wolfictl
    - chdir: philroche/wolfi-package-status
      creates: wolfi-package-status

- name: Ensure grype has a temp directory
  ansible.builtin.file:
    path: /home/{{ user }}/.grype-tmp/
    state: directory
    mode: '0755'

# see https://github.com/anchore/grype/issues/2266
- name: Install custom grype script
  become: true
  ansible.builtin.copy:
    src: grype
    dest: /usr/local/bin/grype
    owner: root
    group: root
    mode: "0755"

- name: Install custom auth script
  become: true
  ansible.builtin.copy:
    src: cg-auth.sh
    dest: /usr/local/bin/cg-auth
    owner: root
    group: root
    mode: "0755"

- name: Install custom build script
  become: true
  ansible.builtin.copy:
    src: cg-build.sh
    dest: /usr/local/bin/cg-build
    owner: root
    group: root
    mode: "0755"

- name: Ensure some binaries from URLs are installed
  tags: k8s
  ansible.builtin.include_tasks: "{{ role_path }}/../common/tasks/binary-install-from-url.yaml"
  loop:
    # https://github.com/anchore/grype/releases
    - name: grype
      version: "0.94.0"
      version_command: grype-orig --version
      path: /usr/local/bin/grype-orig
      url: https://github.com/anchore/grype/releases/download/v0.94.0/grype_0.94.0_linux_amd64.tar.gz
      checksum: sha256:46bad313a4083474a776f6a2787b0caee842c52028cd9b1bffc9d74ba11d565a
      unpack: true
    # https://github.com/anchore/syft/releases
    - name: syft
      version: "1.27.0"
      version_command: syft --version
      path: /usr/local/bin/syft
      url: https://github.com/anchore/syft/releases/download/v1.27.0/syft_1.27.0_linux_amd64.tar.gz
      checksum: sha256:2cee2128b0a05dfadec34676def064979b3098bfa447679c38ce3bb69e9321f3
      unpack: true
  loop_control:
    loop_var: binary
    label: "{{ binary.name }}"

- name: Ensure some other go utils are installed
  ansible.builtin.command:
    cmd: go install {{ item.ref }}
    creates: /home/{{ user }}/.go/bin/{{ item.name }}
  loop_control:
    label: "{{ item.name }}"
  loop:
    - name: crane
      ref: github.com/google/go-containerregistry/cmd/crane@latest
    - name: dive
      ref: github.com/wagoodman/dive@latest
    - name: cosign
      ref: github.com/sigstore/cosign/v2/cmd/cosign@latest

# from https://cloud.google.com/sdk/docs/install#deb
- name: Install gcloud
  include_tasks: "{{ role_path }}/../common/tasks/apt-install-from-repository.yml"
  vars:
    conf:
      shortname: gcloud
      repo_spec: https://packages.cloud.google.com/apt cloud-sdk main
      key_url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      packages:
        - google-cloud-cli

# from https://developer.hashicorp.com/terraform/downloads
- name: Install terraform
  ansible.builtin.include_tasks: "{{ role_path }}/../common/tasks/apt-install-from-repository.yml"
  vars:
    conf:
      shortname: terraform
      repo_spec: https://apt.releases.hashicorp.com bookworm main
      key_url: https://apt.releases.hashicorp.com/gpg
      packages:
        - terraform

# from https://edu.chainguard.dev/chainguard/chainctl-usage/how-to-install-chainctl/
- name: Download and install chainctl
  ansible.builtin.get_url:
    url: https://dl.enforce.dev/chainctl/latest/chainctl_linux_x86_64
    dest: /home/{{ user }}/.local/bin/chainctl
    mode: "0744"

- name: Make sure claude CLI is installed
  ansible.builtin.npm:
    name: "@anthropic-ai/claude-code"
    global: true
